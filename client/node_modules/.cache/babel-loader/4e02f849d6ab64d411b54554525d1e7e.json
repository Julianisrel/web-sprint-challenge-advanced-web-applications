{"ast":null,"code":"var _jsxFileName = \"/Users/juliancole/Documents/Git/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { axiosWithAuth } from \"../utils/auth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  const {\n    push\n  } = useHistory();\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [newColor, setNewColor] = useState({\n    color: \"\",\n    code: {\n      hex: \"\"\n    }\n  });\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth().put(`api/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      updateColors([...colors.filter(color => color.id !== colorToEdit.id), res.data]);\n      setEditing(false);\n    }).catch(err => console.log(err));\n    window.location.reload();\n  };\n\n  const deleteColor = (id, e, color) => {\n    if (window.confirm(\"Are you sure you want to delete this color?\")) {\n      updateColors(colors.filter(color => color.id !== id));\n      axiosWithAuth().delete(`/api/colors/${id}`).then(res => {\n        console.log(`Color with ID: ${id}, was deleted`);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  const handleNewColor = e => {\n    e.preventDefault();\n    axiosWithAuth().post('/api/colors', newColor).then(res => {\n      console.log(newColor);\n    }).catch(err => {\n      console.log(err);\n    });\n    push('/bubbles');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.id,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      deleteColor(color.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"x\"), color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))), editing ? React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"cancel\"))) : React.createElement(\"form\", {\n    onSubmit: handleNewColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setNewColor({ ...newColor,\n      color: e.target.value\n    }),\n    value: newColor.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setNewColor({ ...newColor,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: newColor.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => setNewColor,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Add Color\")));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/juliancole/Documents/Git/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","useHistory","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","push","console","log","editing","setEditing","colorToEdit","setColorToEdit","newColor","setNewColor","editColor","saveEdit","e","preventDefault","put","id","then","res","filter","data","catch","err","window","location","reload","deleteColor","confirm","delete","handleNewColor","post","map","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport { axiosWithAuth } from \"../utils/auth\";\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" }\n};\nconst ColorList = ({ colors, updateColors }) => {\n  const {push} = useHistory();\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const [newColor, setNewColor] = useState({\n    color: \"\",\n    code: { hex: \"\" }\n  });\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n  const saveEdit = e => {\n    e.preventDefault();\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n    axiosWithAuth()\n      .put(`api/colors/${colorToEdit.id}`, colorToEdit)\n      .then(res => {\n        updateColors([\n          ...colors.filter(color => color.id !== colorToEdit.id),\n          res.data,\n        ]);\n        setEditing(false);\n      })\n      .catch(err => console.log(err));\n      window.location.reload();\n  };\n  const deleteColor = (id, e, color) => {\n    if (window.confirm(\"Are you sure you want to delete this color?\")) {\n      updateColors(colors.filter(color => color.id !== id));\n      axiosWithAuth()\n        .delete(`/api/colors/${id}`)\n        .then(res => {\n          console.log(`Color with ID: ${id}, was deleted`);\n        })\n        .catch(err => {\n         console.log(err)\n        });\n    }\n  };\n  const handleNewColor = (e) => {\n    e.preventDefault()\n    axiosWithAuth().post('/api/colors', newColor)\n      .then(res => {\n        console.log(newColor)\n      })\n      .catch(err => {\n     console.log(err)\n      })\n      push('/bubbles')\n  }\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.id} onClick={() => editColor(color)}>\n            <span>\n              <span\n                className=\"delete\"\n                onClick={e => {\n                  deleteColor(color.id);\n                }}\n              >\n                x\n              </span>\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing ? (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      ) : (\n      <form onSubmit={handleNewColor}>\n        <label>\n          color name:\n            <input\n            onChange={e =>\n              setNewColor({ ...newColor, color: e.target.value })\n            }\n            value={newColor.color}\n          />\n        </label>\n        <label>\n          hex code:\n            <input\n            onChange={e =>\n              setNewColor({\n                ...newColor,\n                code: { hex: e.target.value }\n              })\n            }\n            value={newColor.code.hex}\n          />\n        </label> \n        <button onClick={() => setNewColor } type='submit'>Add Color</button>\n      </form>)}\n    </div>\n  );\n};\nexport default ColorList;\n\n"]},"metadata":{},"sourceType":"module"}